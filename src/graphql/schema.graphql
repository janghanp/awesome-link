scalar Date

enum Role {
  ADMIN
  USER
}

type User {
  id: ID!
  name: String!
  email: String!
  image: String
  role: Role
  createdAt: Date!
  updatedAt: Date!
  emailverified: String
  bookmarks: [Link]
}

type Link {
  id: ID!
  title: String!
  description: String!
  url: String!
  imageUrl: String!
  public_id: String!
  createdAt: Date!
  updatedAt: Date!
  users: [User]
}

type Edge {
  cursor: String!
  node: Link!
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

type Response {
  pageInfo: PageInfo
  edges: [Edge]
}

type Query {
  getUser(email: String!): User
  getLinks(after: String): Response
  getBookmarkLinks(after: String, userId: String!): Response
}

type Mutation {
  register(email: String!, name: String!, password: String!): User
  updateProfile(email: String!, image: String!, public_id: String!): User
  updateUserInfo(email: String!, name: String!): User
  bookmark(linkId: String!, userId: String!, isBookmarking: Boolean!): User
  createLink(
    title: String!
    description: String!
    url: String!
    imageUrl: String!
    public_id: String!
  ): Edge
  updateLink(
    id: String!
    title: String!
    description: String!
    url: String!
    imageUrl: String!
    public_id: String!
  ): Link
  deleteLink(id: String!, public_id: String!): Link
}
